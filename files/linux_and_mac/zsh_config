# Path to your oh-my-zsh installation.
export ZSH="/home/shayne/.oh-my-zsh"
export BASHRC="$HOME/.zshrc"
export SSHRC="$HOME/.ssh/config"
export GITRC="$HOME/.gitconfig"
export EMAIL="shaynetremblay@gmail.com"
export EDITOR="vim"

export PATH=$PATH:/usr/bin
export PATH=$PATH:/usr/local/sbin
export PATH=$PATH:/usr/lib/go-1.11/bin
export PATH=$PATH:$HOME/.go/bin
export PATH=$PATH:$HOME/bin
export PATH=$PATH:$HOME/.yarn/bin
export PATH=$PATH:$HOME/opt
export PATH=$PATH:$HOME/opt/teleport/bin
export PATH=$PATH:$HOME/opt/tsh/bin
export PATH=$PATH:$HOME/opt/libwebp/bin
export PATH=$PATH:$HOME/opt/racer/target/release
export PATH=$PATH:$HOME/.cargo/bin
export PATH=$PATH:$HOME/.cabal/bin

export GOPATH=$HOME/.go
export ALPACA_ROOT=$HOME/opt/alpaca

export TERM="xterm-256color"
ZSH_THEME="powerlevel9k/powerlevel9k"
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_VCS_GIT_ICON=''

plugins=(
  git
  command-not-found
)

source_if_exists() {
  [[ -f "$1" ]] && source "$1"
}

source $ZSH/oh-my-zsh.sh

eval "$($HOME/dotfiles-manager/bin/dotfiles init -)"
eval "$($HOME/provision/bin/provision init -)"

. $HOME/.asdf/asdf.sh

. $HOME/.asdf/completions/asdf.bash

alias sb="source $BASHRC"
alias eb="$EDITOR $BASHRC && sb"
alias ei="$EDITOR $HOME/.install.sh"
alias eg="$EDITOR $GITRC"
alias es="$EDITOR $SSHRC"
# alias git="hub"
alias extract="tar -xzvf"

runproject() {
  # for all Elixir projects
  if [ -f mix.exs ]; then
    # for Phoenix projects
    if grep -q "phoenix" mix.exs; then
      iex -S mix phx.server
    # for plain Elixir projects
    else
      iex -S mix
    fi
  elif [ -f package.json ]; then
    yarn start
  else
    echo '`run` not setup for this project type'
  fi
}

runfile() {
  local filepath="$1"
  local base=$(basename "$filepath")
  local extension="${base##*.}"
  local name="${base%.*}"

  if [ "$extension" = "c" ]; then
    g++ -o $name $filepath && ./$name
  else
    echo "Not sure how to run file: $file"
  fi
}

run() {
  if [ $# -eq 0 ]; then
    runproject
  else
    runfile "$@"
  fi
}

killit() {
  kill -9 `ps -ef | grep $1 | grep -v grep | awk '{ print $2 }' | tr '\n' ' '`
}

elixirdiff() {
  git diff --name-only `git bn` $(git merge-base `git bn` origin/master) | grep .ex | tr '\n' ' '
}

schedule() {
  if [[ ! -d $HOME/schedule ]]; then
    mkdir $HOME/schedule
  fi
  if [[ "$1" =~ ^(--yesterday|-y) ]]; then
    vim "$HOME/schedule/$(date -d 'yesterday' +'%m-%d-%Y').log"
  elif [[ "$1" =~ ^(--tomorrow|-t) ]]; then
    vim "$HOME/schedule/$(date -d 'tomorrow' +'%m-%d-%Y').log"
  else
    vim "$HOME/schedule/$(date +'%m-%d-%Y').log"
  fi
}

scpdir() {
  tar czf - "$1" | ssh "$2" "cd ~/ && tar xvzf -"
}

cpsecrets() {
  local dir="$1"
  for file in $(find "$dir" -name "*.exs.example")
  do
    cp "$file" ${VAL%.example}
  done
}

rename() {
  local old_pattern="$1"
  shift
  local new_pattern="$1"
  shift

  for file in $@; do
    new_name=$(echo "$file" | awk "{ gsub(/$old_pattern/, \"$new_pattern\"); print }" )
    echo "$file -> $new_name"
    mv "$file" "$new_name"
  done
}

source_if_exists "$HOME/.workrc"

source $HOME/.alacritty-completions.bash
source $HOME/.bash_os

